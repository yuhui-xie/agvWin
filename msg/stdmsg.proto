package stdmsg;


message Position
{
    required double x = 1 [default=0];
    required double y = 2 [default=0];
    optional double z = 3 [default=0];
}
message Orentation
{
    optional double roll = 1 [default=0];
    optional double pitch = 2 [default=0];
    required double yaw = 3 [default=0];
}
message Pose
{
    required Position position = 1;
    required Orentation orentation = 2;
}

message Velocity
{
    required double v = 1[default=0];
    required double w = 2[default=0];
    optional double v2 = 3[default=0];
}

message Pose_Velocity
{
    optional double x = 1 [default=0];
    optional double y = 2 [default=0];
    optional double yaw = 3 [default=0];
    required double vx = 4 [default=0];
    required double vy = 5 [default=0];
    required double w = 6 [default=0];
}

message Laser_Scan
{
    message Laser_Config
    {
        required float angle_min = 1;
        required float angle_max = 2;
        required float angle_increment = 3; 
        //required float laser_data_num =4;
        required float range_max = 5;
    }
    required Laser_Config config = 1;
        
    repeated float ranges = 2;
    repeated float intensities = 3;

    //required string frame = 4;
    required Pose pose = 5;
    required Pose robot = 6;
    optional double steer = 9;
    optional int32 seq = 7[default=0];
    optional string annotation = 8 [default = ""];
}

message Global_Plan
{
    repeated Pose path = 1;
    optional int32 seq = 2 [ default = 0];
    optional int32 goal_reached = 3 [default=0];
    optional int32 distance_goal_reached = 4 [default=0];//crti:2017_03_18
}
message Data
{
    optional bytes data = 1 [default = ""];
    optional int32 seq = 2[default=0];
}
message String
{
    optional string str = 1 [default = ""];
    optional int32 seq = 2[default=0];
}
message LaserList
{
    repeated Laser_Scan scans = 1;
    optional int32 seq = 2[default=0];
}

message MoveMode
{
    required int32 move_mode = 1[default=0];
}

message SomeFlag
{    
    optional int32 emergency_stop_flag = 1;
    optional int32 obstacle_forward_flag = 2;
    optional int32 move_mode_flag = 3;
}

message NavConfig
{
    optional double stop_delta_distance = 1;
    optional double stop_delta_theta = 2;
    optional double nav_v = 3;
    optional double nav_w = 4;
}

message Light
{
    optional int32 lightflag = 1;
    optional int32 number = 2;
}